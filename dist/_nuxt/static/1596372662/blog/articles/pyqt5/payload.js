__NUXT_JSONP__("/blog/articles/pyqt5", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){return {data:[{article:{title:r,description:"PyQt5 is a pretty sweet set of Python bindings for Qt application framework that is comprised of numerous useful components",img:"joao-tzanno-G9_Euqxpu4k-unsplash.jpg",alt:r,featured:0,author:{name:"Jesse Quinn",bio:"All about Jesse",img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1533636721434-0e2d61030955?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80",alt:"profile photo"},publishedAt:"2019-10-28T03:00:00.000Z",updateAt:p,toc:[],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:b,tag:"strong",props:{},children:[{type:a,value:"You can now find my releases and source code "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fjessequinn\u002Ftagger",rel:[g,h,i],target:j},children:[{type:a,value:"here"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"I have to say I have really enjoyed working with "},{type:b,tag:f,props:{href:"https:\u002F\u002Fwww.riverbankcomputing.com\u002Fstatic\u002FDocs\u002FPyQt5\u002Fintroduction.html",rel:[g,h,i],target:j},children:[{type:a,value:"PyQt5"}]},{type:a,value:" and Designer versus Tk. Anyhow, my mission was to create a PyQt5 based application for movie\u002Ftv show meta-tagging because, as it stands, linux lacks any, atleast in my opinion. "}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"To being working with PyQt5, I needed to install some packages on Manjaro. I highly recommend using the package builder pyinstaller and "},{type:b,tag:f,props:{href:"https:\u002F\u002Fpypi.org\u002Fproject\u002Ffbs\u002F",rel:[g,h,i],target:j},children:[{type:a,value:q}]},{type:a,value:"; for this we will need to compile a shared libraries version of Python. This is accomplished by prefixing the "},{type:b,tag:d,props:{},children:[{type:a,value:"pyenv install version"}]},{type:a,value:" with "},{type:b,tag:d,props:{},children:[{type:a,value:"CONFIGURE_OPTS=--enabled-shared"}]},{type:a,value:".  This is required as "},{type:b,tag:d,props:{},children:[{type:a,value:"pyinstaller"}]},{type:a,value:" requires shared libraries."}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"CONFIGURE_OPTS=--enable-shared pyenv install 3.6.8\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Now we can safely install "},{type:b,tag:d,props:{},children:[{type:a,value:q}]},{type:a,value:" and "},{type:b,tag:d,props:{},children:[{type:a,value:"pyInstaller"}]}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"pip install fbs PyInstaller\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"I am a fan of "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fpyenv\u002Fpyenv",rel:[g,h,i],target:j},children:[{type:a,value:"pyenv"}]},{type:a,value:", "},{type:b,tag:f,props:{href:"https:\u002F\u002Fgithub.com\u002Fpyenv\u002Fpyenv-virtualenv",rel:[g,h,i],target:j},children:[{type:a,value:"pyenv-virtualenv"}]},{type:a,value:", etc. as I work with several versions of Python. I wanted to install "},{type:b,tag:d,props:{},children:[{type:a,value:q}]},{type:a,value:" as it allows me to wrap my development into a system that I can easily compile to produce a binary for execution elsewhere. There are other packages I needed as well so I will provide a copy of my "},{type:b,tag:d,props:{},children:[{type:a,value:"pip freeze"}]},{type:a,value:":"}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"altgraph==0.16.1\nasn1crypto==0.24.0\nastroid==2.2.5\nboto3==1.9.129\nbotocore==1.12.129\ncertifi==2018.11.29\ncffi==1.12.2\nchardet==3.0.4\nClick==7.0\ncoverage==4.5.3\ncryptography==2.6.1\ndocutils==0.14\nfbs==0.7.3\nfuture==0.17.1\nidna==2.8\nisort==4.3.17\njmespath==0.9.4\nlazy-object-proxy==1.3.1\nmacholib==1.11\nmccabe==0.6.1\nmock==2.0.0\nmutagen==1.42.0\nnose==1.3.7\npbr==5.1.3\npefile==2018.8.8\npyAesCrypt==0.4.2\npycparser==2.19\nPyInstaller==3.4\npylint==2.3.1\nPyQt5==5.12.1\nPyQt5-sip==4.19.15\nPyQt5-stubs==5.12.1.0\npython-dateutil==2.8.0\npython-dotenv==0.10.1\nrequests==2.21.0\nrequests-cache==0.4.13\ns3transfer==0.2.0\nsix==1.12.0\ntmdbv3api==1.3.2\ntyped-ast==1.3.1\nurllib3==1.24.1\nwrapt==1.11.1\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Of course from this list the must have is "},{type:b,tag:d,props:{},children:[{type:a,value:"pyqt5 pyqt5-sip pyqt5-stub"}]},{type:a,value:" and chances are some other packages I do not need like "},{type:b,tag:d,props:{},children:[{type:a,value:"Click"}]},{type:a,value:" as I am actually converting over a script I wrote around Click, a CLI interface, to PyQt5. Finally, a userful application is Designer for Qt, which I installed via "},{type:b,tag:d,props:{},children:[{type:a,value:"pacman"}]},{type:a,value:" on Manjaro. Lastly, you will need an API key from "},{type:b,tag:f,props:{href:"https:\u002F\u002Fdevelopers.themoviedb.org\u002F3\u002Fgetting-started\u002Fintroduction",rel:[g,h,i],target:j},children:[{type:a,value:"TMDB"}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The folder structure of my app is as such:"}]},{type:a,value:c},{type:b,tag:k,props:{className:[l]},children:[{type:b,tag:m,props:{className:[n,o]},children:[{type:b,tag:d,props:{},children:[{type:a,value:".\n├── src\n│   ├── build\n│   │   └── settings\n│   └── main\n│       ├── icons\n│       │   ├── base\n│       │   ├── linux\n│       │   └── mac\n│       └── python\n│           └── ui\n└── tests\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"In the main folder exists a "},{type:b,tag:d,props:{},children:[{type:a,value:"main.py"}]},{type:a,value:" file that contains my application. However, I will begin by talking about some important Classes."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"An important and simple Class I created uses "},{type:b,tag:f,props:{href:"https:\u002F\u002Fmutagen.readthedocs.io\u002Fen\u002Flatest\u002Findex.html",rel:[g,h,i],target:j},children:[{type:a,value:"Mutagen"}]},{type:a,value:" for manipulating mp4 meta tag data. I stick to the semantics for "},{type:b,tag:f,props:{href:"https:\u002F\u002Fcode.google.com\u002Farchive\u002Fp\u002Fmp4v2\u002Fwikis\u002FiTunesMetadata.wiki#Media_Type_(stik)",rel:[g,h,i],target:j},children:[{type:a,value:"iTunes "}]},{type:a,value:s}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The following is a gist of that Class:"}]},{type:a,value:c},{type:b,tag:"script",props:{src:"https:\u002F\u002Fgist.github.com\u002Fjessequinn\u002F591a8cae7990669a66b4f4435174f8fe.js"},children:[]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"The following gist contains three Classes, two of which are inherited from the base MetaTag Class. Essentially, I use these Classes to either meta tag a movie or a show. They will be instantiated within my application for each new movie or show that requires meta tagging. I pass several parameters such as title, description, etc in the constructors."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"to be continued ..."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fpyqt5",extension:".md",slug:"pyqt5",createdAt:"2020-07-22T00:27:09.688Z",updatedAt:"2020-07-22T00:30:14.098Z"},prev:{title:"An interesting adventure with a PHP CMS \u002F\u002F Part 2",updateAt:p,slug:"php-cms-2"},next:{title:"Compiling Tensorflow",updateAt:p,slug:"tensorflow"}}],fetch:[],mutations:[]}}("text","element","\n","code","p","a","nofollow","noopener","noreferrer","_blank","div","nuxt-content-highlight","pre","language-text","line-numbers","2020-07-19T03:00:00.000Z","fbs","PyQt5 Programming",".")));