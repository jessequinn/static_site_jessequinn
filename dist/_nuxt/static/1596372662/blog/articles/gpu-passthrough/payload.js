__NUXT_JSONP__("/blog/articles/gpu-passthrough", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){return {data:[{article:{title:n,description:"A simple walk-through of a GPU Pass-through on a Manjaro desktop.",img:"yohei-shimomae-NkQR-rlIM44-unsplash.jpg",alt:n,featured:1,author:{name:"Jesse Quinn",bio:"All about Jesse",img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1533636721434-0e2d61030955?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80",alt:"profile photo"},publishedAt:"2019-10-28T03:00:00.000Z",updateAt:l,toc:[],body:{type:"root",children:[{type:b,tag:e,props:{},children:[{type:a,value:"Today I would like to quickly talk about how to setup a GPU pass-through for a decidated GPU on a qemu\u002Fkvm windows 10 guest. For this to work "},{type:b,tag:"strong",props:{},children:[{type:a,value:"you need two video cards"}]},{type:a,value:"."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"First we need to enable IOMMU via AMD-Vi or Intel Vt-d in the BIOS. Now lets quickly open and edit the "},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Fetc\u002Fdefault\u002Fgrub"}]},{type:a,value:" and append the following to the "},{type:b,tag:d,props:{},children:[{type:a,value:"GRUB_CMDLINE_LINUX_DEFAULT"}]},{type:a,value:" line:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"GRUB_CMDLINE_LINUX_DEFAULT=\" ... intel_iommu=on iommu=pt pcie_acs_override=downstream hugepages=2048\"\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"You do not remove other kernel commands such as quiet and resume=UUID if you have them. Another important note, you only need "},{type:b,tag:d,props:{},children:[{type:a,value:"pcie_acs_override=downstream"}]},{type:a,value:" if you are using an ACS override patch."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"After modifying the grub file you need to update grub with "},{type:b,tag:d,props:{},children:[{type:a,value:"update-grub"}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Using "},{type:b,tag:d,props:{},children:[{type:a,value:"lspci -nn"}]},{type:a,value:" we can find the device IDs of the GPU that we want to use. In my case, i want to use my GTX 750ti as the GPU to pass-through."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"02:00.0 VGA compatible controller [0300]: NVIDIA Corporation GM107 [GeForce GTX 750 Ti] [10de:1380] (rev a2)\n02:00.1 Audio device [0403]: NVIDIA Corporation Device [10de:0fbc] (rev a1)\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Here i will copy "},{type:b,tag:d,props:{},children:[{type:a,value:"10de:1380"}]},{type:a,value:" and "},{type:b,tag:d,props:{},children:[{type:a,value:"10de:0fbc"}]},{type:a,value:" into "},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Fetc\u002Fmodprobe.d\u002Fvfio.conf"}]},{type:a,value:" like so "},{type:b,tag:d,props:{},children:[{type:a,value:"options vfio-pci ids=10de:1380,10de:0fbc"}]},{type:a,value:". Next, add\u002Fmodify the following line in "},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Fetc\u002Fmkinitcpio.conf"}]},{type:a,value:" with "},{type:b,tag:d,props:{},children:[{type:a,value:"MODULES=\" ... vfio vfio_iommu_type1 vfio_pci vfio_virqfd nvidia ... \""}]},{type:a,value:". You may need to use "},{type:b,tag:d,props:{},children:[{type:a,value:"nouveau"}]},{type:a,value:" or some other driver depending on your video card. In my case, i am using non-free nvidia drivers. Also, add\u002Fmodify the line with "},{type:b,tag:d,props:{},children:[{type:a,value:"HOOKS=\" ... modconf ... \""}]},{type:a,value:"; however, more than likely you already have it somewhere in the HOOKS line anyhow. Now rebuild initramfs by calling "},{type:b,tag:d,props:{},children:[{type:a,value:"mkinitcpio -g \u002Fboot\u002Flinux-custom.img"}]},{type:a,value:o}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Validate that your GPU, "},{type:b,tag:d,props:{},children:[{type:a,value:"lspci -nnk"}]},{type:a,value:", is using the vfio-pci as the kernel driver loader otherwise something was not done correctly."}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"02:00.0 VGA compatible controller [0300]: NVIDIA Corporation GM107 [GeForce GTX 750 Ti] [10de:1380] (rev a2)\n    Subsystem: Gigabyte Technology Co., Ltd GM107 [GeForce GTX 750 Ti] [1458:362d]\n    Kernel driver in use: vfio-pci\n    Kernel modules: nouveau, nvidia_drm, nvidia\n02:00.1 Audio device [0403]: NVIDIA Corporation Device [10de:0fbc] (rev a1)\n    Subsystem: Gigabyte Technology Co., Ltd Device [1458:362d]\n    Kernel driver in use: vfio-pci\n    Kernel modules: snd_hda_intel\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"If the vfio-pci kernel driver is loaded for the GPU you can proceed by installing the following:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo pacman -S libvirt virt-manager qemu\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"I also prefer to install ovmf-git from the AUR repository instead of ovmf from extra. You may use "}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo pacman -S yay\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"and with "},{type:b,tag:d,props:{},children:[{type:a,value:"yay"}]},{type:a,value:" install"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"yay ovmf-git\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Now edit the ``"},{type:b,tag:d,props:{},children:[{type:a,value:"\u002Fetc\u002Flibvirt\u002Fqemu.conf"}]},{type:a,value:" file and add the path of OVMF firmware:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"nvram = [\"\u002Fusr\u002Fshare\u002Fovmf\u002Fovmf_code_x64.bin:\u002Fusr\u002Fshare\u002Fovmf\u002Fovmf_vars_x64.bin\"]\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"in my case. We also need to start several services:"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo systemctl start libvirtd.service \nsudo systemctl start virtlogd.socket\nsudo systemctl enable libvirtd.service\nsudo systemctl enable virtlogd.socket\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Now install "}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo pacman -S virt-manager\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"and add yourself to the group"}]},{type:a,value:c},{type:b,tag:g,props:{className:[h]},children:[{type:b,tag:i,props:{className:[j,k]},children:[{type:b,tag:d,props:{},children:[{type:a,value:"sudo usermod -a -G libvirt username\n"}]}]}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"and finally launch virt-manager. I recommend launching virt-manager from your GUI interface rather than terminal as if you have python3 installed you will run into errors otherwise you can simply run "},{type:b,tag:d,props:{},children:[{type:a,value:"virt-manager &"}]},{type:a,value:" in the background from the terminal."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Within virt-manager you may initiate the installation process for Windows or some other operating system."}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"For settings in virt-manager here are my suggestions for a i7:"}]},{type:a,value:c},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"CPUs"},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Current allocation: 8"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Copy host CPU configuration"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Manually set CPU topology"},{type:b,tag:m,props:{},children:[{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Sockets: 1"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Cores: 4"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Threads: 2"}]},{type:a,value:c}]}]},{type:a,value:c}]}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"PCI devices for GPU\u002FGPU-audio (via add hardware button)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Any dedicated USB devices (via add hardware button)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"Memory (minimum 8192 miB)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"SCSI (requires virtio-win "},{type:b,tag:"a",props:{href:"https:\u002F\u002Fdocs.fedoraproject.org\u002Fen-US\u002Fquick-docs\u002Fcreating-windows-virtual-machines-using-virtio-drivers\u002Findex.html",rel:["nofollow","noopener","noreferrer"],target:"_blank"},children:[{type:a,value:"drivers"}]},{type:a,value:" otherwise use SATA for your HDD)"}]},{type:a,value:c},{type:b,tag:f,props:{},children:[{type:a,value:"add SATA CDROM with virt-io and windows iso file "}]},{type:a,value:c}]},{type:a,value:c},{type:b,tag:e,props:{},children:[{type:a,value:"Hopefully your virtual machine will boot windows and install flawlessly. With SCSI you need to install the virtio-win drivers at the start of the windows installation through the windows driver select option."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fgpu-passthrough",extension:".md",slug:"gpu-passthrough",createdAt:"2020-07-22T00:27:09.724Z",updatedAt:"2020-07-22T00:30:14.107Z"},prev:{title:"Google Photos API and Photo Storage",updateAt:l,slug:"google-photo-api"},next:{title:"Graylog 3 Trial and Error Walk-through",updateAt:l,slug:"graylog"}}],fetch:[],mutations:[]}}("text","element","\n","code","p","li","div","nuxt-content-highlight","pre","language-text","line-numbers","2020-07-19T03:00:00.000Z","ul","GPU Pass-through Manjaro Walk-through"," and reboot.")));