__NUXT_JSONP__("/blog/articles/kong-ingress", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah,ai,aj,ak,al,am,an,ao,ap,aq,ar,as,at,au,av,aw){return {data:[{article:{title:X,description:"I install Kong ingress and manage with Konga.",img:"simon-ray-EfASbqkuh2A-unsplash.jpg",alt:X,featured:1,author:{name:"Jesse Quinn",bio:"All about Jesse",img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1533636721434-0e2d61030955?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80",alt:"profile photo"},publishedAt:"2020-06-19T03:00:00.000Z",updateAt:F,toc:[{id:Y,depth:G,text:Z},{id:_,depth:G,text:$},{id:aa,depth:G,text:ab}],body:{type:"root",children:[{type:b,tag:H,props:{id:Y},children:[{type:b,tag:u,props:{href:"#introduction",ariaHidden:I,tabIndex:J},children:[{type:b,tag:c,props:{className:[K,L]},children:[]}]},{type:a,value:Z}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"I was motivated to move away from a databaseless "},{type:b,tag:u,props:{href:"https:\u002F\u002Fgithub.com\u002FKong\u002Fkubernetes-ingress-controller",rel:[M,N,O],target:P},children:[{type:a,value:"Kong ingress"}]},{type:a,value:"\nsetup to a maintained Postgres database. As the cloud provider is "},{type:b,tag:u,props:{href:"https:\u002F\u002Fm.do.co\u002Fc\u002F6ceb645458ec",rel:[M,N,O],target:P},children:[{type:a,value:"DO"}]},{type:a,value:",\nCasandra as a database was not an option unless Casandra is installed on a droplet, which is always a good option but more work when it comes\nto maintenance. Anyhow, Kong strongly recommends Postgres over Casandra. By moving to a database setup, I\ncould remove all the additional Kubernetes YAML manifests for plugins, consumer keys, consumers, and so on. Furthermore, I can now use\n"},{type:b,tag:u,props:{href:"https:\u002F\u002Fpantsel.github.io\u002Fkonga\u002F",rel:[M,N,O],target:P},children:[{type:a,value:"Konga"}]},{type:a,value:" to easily update any services, routes, consumers, plugins, etc from a nice GUI. More on Konga later."}]},{type:a,value:m},{type:b,tag:H,props:{id:_},children:[{type:b,tag:u,props:{href:"#preparation-and-installation",ariaHidden:I,tabIndex:J},children:[{type:b,tag:c,props:{className:[K,L]},children:[]}]},{type:a,value:$}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"I generally write my code for deployment and destruction with Makefiles. However, for simplicity we will stick to command lines.\nThe following commands are used to install Kong on a cluster. Helm 3 is required along with "},{type:b,tag:l,props:{},children:[{type:a,value:"kubectl"}]},{type:a,value:ac}]},{type:a,value:m},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,Q]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"kubectl apply -f PostgresSecret.yaml\nhelm repo "},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:"add"}]},{type:a,value:" kong https:\u002F\u002Fcharts.konghq.com\nhelm repo update\nhelm "},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:ad}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n--set ingressController.installCRDs"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\npostgresql.enabled"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.database"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_user.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_user.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_password.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_password.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_host.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_host.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_port"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:S}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_database.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_database.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\nenv.pg_ssl"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:al}]}]}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"Let's go over the above commands. First, I wrote a manifest "},{type:b,tag:l,props:{},children:[{type:a,value:am}]},{type:a,value:" that contains a secret:"}]},{type:a,value:m},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:c,props:{className:[an]},children:[{type:a,value:am}]},{type:b,tag:z,props:{className:[A,ao]},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:"---"}]},{type:a,value:m},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"apiVersion"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" v1\n"},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"kind"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" Secret\n"},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"metadata"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"name"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" kong"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:ap},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"secret\n  "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"namespace"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" default\n"},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"type"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" Opaque\n"},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"data"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"username"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"password"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"host"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:ap}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:C},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:D}]},{type:a,value:m}]}]}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"The "},{type:b,tag:l,props:{},children:[{type:a,value:"\u003Cbas64 encoded string\u003E"}]},{type:a,value:" can be generated by "},{type:b,tag:l,props:{},children:[{type:a,value:"echo 'some string' | basee64"}]},{type:a,value:". "},{type:b,tag:l,props:{},children:[{type:a,value:"kubectl apply -f PostgresSecret.yaml"}]},{type:a,value:" simply updates\u002Fcreates\nthe secret in a cluster. The subsequent commands are related to Helm and the installation of a specific repo and the update of all repos. Finally,"}]},{type:a,value:m},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,Q]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"helm "},{type:b,tag:c,props:{className:[d,R]},children:[{type:a,value:ad}]},{type:a,value:ae},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n --set ingressController.installCRDs"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n postgresql.enabled"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:B},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.database"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:af},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_user.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_user.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_password.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_password.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_host.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ai},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_host.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_port"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:S}]},{type:a,value:aj},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_database.valueFrom.secretKeyRef.key"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:ak},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_database.valueFrom.secretKeyRef.name"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:s},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:k}]},{type:a,value:"\n env.pg_ssl"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:al}]}]}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"is executed. Here, we are simply installing Kong with the release name ingress-kong with several environmental variables set.\nAs we want to dynamically pull information from our secret we must include "},{type:b,tag:l,props:{},children:[{type:a,value:"valueFrom.secretKeyRef.key"}]},{type:a,value:" and "},{type:b,tag:l,props:{},children:[{type:a,value:"valueFrom.secretKeyRef.name"}]},{type:a,value:". Of\ncourse, we do not require a secret, and we could literally hardcode all the database information in the command."}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"As an interface to Kong, a pretty GUI, I installed Konga via "},{type:b,tag:l,props:{},children:[{type:a,value:aq}]},{type:a,value:" locally:"}]},{type:a,value:m},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:c,props:{className:[an]},children:[{type:a,value:ar}]},{type:b,tag:z,props:{className:[A,ao]},children:[{type:b,tag:l,props:{},children:[{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"version"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'3.8'"}]},{type:a,value:"\n\n"},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"services"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:"# run once"}]},{type:a,value:t},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:as}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"command"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"-c prepare -a postgres -u postgresql:\u002F\u002Fuser:password@server:25060\u002Fkonga?sslmode=require&ssl=true\""}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"failure\n\n  "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"konga"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:at},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:au},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" unless"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"stopped\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"environment"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_ADAPTER"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'postgres'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_HOST"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'server'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_DATABASE"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'konga'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_USER"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'user'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_PASSWORD"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'password'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_PORT"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:S}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"DB_SSL"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:"1"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"NODE_TLS_REJECT_UNAUTHORIZED"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:"0"}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:"# may not be needed"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"TOKEN_SECRET"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'token'"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"NODE_ENV"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'production'"}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"ports"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"\"1337:1337\""}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"depends_on"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,T]},children:[{type:a,value:"# comment out after first run"}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" konga"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"prepare\n\n  "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:W}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:w},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:U}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" qoomon\u002Fdocker"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"host\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"container_name"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:" dockerhost\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:"cap_add"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:o},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" NET_ADMIN\n      "},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:" NET_RAW\n    "},{type:b,tag:c,props:{className:[d,g,h]},children:[{type:a,value:V}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:f}]},{type:a,value:av},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:p}]},{type:a,value:"failure\n"}]}]}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:b,tag:l,props:{},children:[{type:a,value:"docker-compose up"}]},{type:a,value:" will allow you to access Konga from "},{type:b,tag:l,props:{},children:[{type:a,value:aw}]},{type:a,value:" but only after "},{type:b,tag:l,props:{},children:[{type:a,value:as}]},{type:a,value:" runs\nand installs the new database. I use "},{type:b,tag:l,props:{},children:[{type:a,value:W}]},{type:a,value:" for access to my host. This will make sense in a bit. Note,\nmake sure to include the correct database information in the "},{type:b,tag:l,props:{},children:[{type:a,value:ar}]},{type:a,value:" above."}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"With "},{type:b,tag:l,props:{},children:[{type:a,value:aq}]},{type:a,value:" running we need to create a port-forward to our Kong admin interface on port 8444 (ssl). This can\neasily be achieved with the following (assuming namespace was left as default):"}]},{type:a,value:m},{type:b,tag:x,props:{className:[y]},children:[{type:b,tag:z,props:{className:[A,Q]},children:[{type:b,tag:l,props:{},children:[{type:a,value:"kubectl port-forward "},{type:b,tag:c,props:{className:[d,E]},children:[{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:"$("}]},{type:a,value:"kubectl get pod -l app.kubernetes.io\u002Finstance"},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:a,value:"ingress-kong -o "},{type:b,tag:c,props:{className:[d,"assign-left",E]},children:[{type:a,value:"jsonpath"}]},{type:b,tag:c,props:{className:[d,i]},children:[{type:a,value:j}]},{type:b,tag:c,props:{className:[d,q]},children:[{type:a,value:"'{.items[0].metadata.name}'"}]},{type:b,tag:c,props:{className:[d,E]},children:[{type:a,value:")"}]}]},{type:a,value:n},{type:b,tag:c,props:{className:[d,v]},children:[{type:a,value:"8444"}]},{type:a,value:":8444\n"}]}]}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"With the port-forward to your cluster made we now can go to "},{type:b,tag:l,props:{},children:[{type:a,value:aw}]},{type:a,value:" and create a new admin account. Once done,\nwe need to create a new connection to our Kong and this is where "},{type:b,tag:l,props:{},children:[{type:a,value:W}]},{type:a,value:" is applied. As a new connection, we need\nto use "},{type:b,tag:l,props:{},children:[{type:a,value:"https:\u002F\u002Fdockerhost:8444"}]},{type:a,value:". This should create a successful connection to your Kong instance. Now create your consumers,\nadd your plugins, create your routes and services, etc. Have fun! You could always deploy Konga, but I avoid this for security reasons."}]},{type:a,value:m},{type:b,tag:H,props:{id:aa},children:[{type:b,tag:u,props:{href:"#final-words",ariaHidden:I,tabIndex:J},children:[{type:b,tag:c,props:{className:[K,L]},children:[]}]},{type:a,value:ab}]},{type:a,value:m},{type:b,tag:r,props:{},children:[{type:a,value:"I have quickly detailed how to get Kong with a dedicated database installed and configured via Konga and Docker Compose.\nThere really is not any challenge here. However, if you do have an issue with initializing your database you can\nalways check your pod "},{type:b,tag:l,props:{},children:[{type:a,value:"kubectl logs ingress-kong-kong-init-migrations-\u003Csomestring\u003E -c wait-for-postgres"}]},{type:a,value:ac}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fkong-ingress",extension:".md",slug:"kong-ingress",createdAt:"2020-07-22T00:27:09.686Z",updatedAt:"2020-07-25T22:21:25.061Z"},prev:{title:"Logging Symfony applications to a ELK stack",updateAt:F,slug:"symfony-elk"},next:{title:"Grafana on Kubernetes",updateAt:F,slug:"grafana"}}],fetch:[],mutations:[]}}("text","element","span","token","punctuation",":","key","atrule","operator","=","\\","code","\n"," ","\n      ","-","string","p","kong-database-secret,","\n  ","a","number","\n    ","div","nuxt-content-highlight","pre","line-numbers","false,"," \u003Cbas64 encoded string","\u003E","variable","2020-07-19T03:00:00.000Z",2,"h2","true",-1,"icon","icon-link","nofollow","noopener","noreferrer","_blank","language-bash","function","25060","comment","image","restart","dockerhost","Kong Ingress","introduction","Introduction","preparation-and-installation","Preparation and Installation","final-words","Final Words",".","install"," ingress-kong kong\u002Fkong ","postgres,","username,","password,","host,",",","database,","true\n","PostgresSecret.yaml","filename","language-yaml","database","docker-compose","docker-compose.yaml","konga-prepare"," pantsel\u002Fkonga","next\n    "," on","localhost:1337")));