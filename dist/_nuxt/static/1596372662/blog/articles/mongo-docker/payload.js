__NUXT_JSONP__("/blog/articles/mongo-docker", (function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,_,$,aa,ab,ac,ad,ae,af,ag,ah){return {data:[{article:{title:P,description:"Just a quick and informative post about creating a replicate set with Mongodb and Docker-compose.",img:"joao-tzanno-G9_Euqxpu4k-unsplash.jpg",alt:P,featured:1,author:{name:"Jesse Quinn",bio:"All about Jesse",img:"https:\u002F\u002Fimages.unsplash.com\u002Fphoto-1533636721434-0e2d61030955?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=2550&q=80",alt:"profile photo"},publishedAt:"2019-12-28T03:00:00.000Z",updateAt:K,toc:[],body:{type:Q,children:[{type:b,tag:m,props:{},children:[{type:a,value:"Just a quick post as I am working on updating a recent Go project from ORM to ODM (Mongodb) so I wanted to show how I quickly configured a Mongodb replicate set with "},{type:b,tag:D,props:{href:R,rel:[E,F,G],target:H},children:[{type:a,value:"Docker-compose"}]},{type:a,value:" following an article I found on google "},{type:b,tag:D,props:{href:"https:\u002F\u002Fqiita.com\u002Fusabarashi\u002Fitems\u002F3854a1da0e47feb93ba0",rel:[E,F,G],target:H},children:[{type:a,value:S}]},{type:a,value:". The reason for the change is simply for scalability (work related) and sheer interests (personal growth). A great read on the subject of replication can be found "},{type:b,tag:D,props:{href:"https:\u002F\u002Fdocs.mongodb.com\u002Fmanual\u002Freplication\u002F",rel:[E,F,G],target:H},children:[{type:a,value:S}]},{type:a,value:n}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"You can read a great deal about "},{type:b,tag:D,props:{href:R,rel:[E,F,G],target:H},children:[{type:a,value:"Compose"}]},{type:a,value:" to get a better understanding; but I believe it is quite easy to understand the "},{type:b,tag:g,props:{},children:[{type:a,value:"yaml|yml"}]},{type:a,value:" file. The following "},{type:b,tag:g,props:{},children:[{type:a,value:T}]}]},{type:a,value:f},{type:b,tag:U,props:{},children:[]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:b,tag:"strong",props:{},children:[{type:a,value:"important"}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"You will need to run docker twice. Once with the environment variables while having commented out the "},{type:b,tag:g,props:{},children:[{type:a,value:V}]},{type:a,value:" followed by the opposite. The reason for this is quite simple. When "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:" uses the environment variables it creates the user "},{type:b,tag:g,props:{},children:[{type:a,value:Q}]},{type:a,value:" in the "},{type:b,tag:g,props:{},children:[{type:a,value:"admin"}]},{type:a,value:" database while also running "},{type:b,tag:g,props:{},children:[{type:a,value:"--auth"}]},{type:a,value:". To properly configure the replica set you first need to create the authentication.  I believe having the "},{type:b,tag:g,props:{},children:[{type:a,value:V}]},{type:a,value:" the way it is causes a problem trying to do everything in one shot. "}]},{type:a,value:f},{type:b,tag:U,props:{},children:[]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"version: '3.7'\n\nservices:\n    mongo1:\n        hostname: mongo1\n        container_name: gogqlserver_mongo1\n        image: mongo:4.2.2-bionic\n        restart: unless-stopped\n#        environment:\n#            MONGO_INITDB_ROOT_USERNAME: root\n#            MONGO_INITDB_ROOT_PASSWORD: password\n#            MONGO_INITDB_DATABASE: admin\n        expose:\n            - 27017\n        ports:\n            - 27017:27017\n        volumes:\n            - .\u002Fdocker\u002Fmongo\u002Fetc\u002Fmongod-keyfile:\u002Fetc\u002Fmongod-keyfile:ro # Permission: 400\n            - .\u002Fdocker\u002Fmongo\u002Froot:\u002Froot:ro\n#            - .\u002Fdocker\u002Fmongo\u002Fvolume:\u002Fdata\u002Fdb\n#            - .\u002Fdocker\u002Fmongo\u002Fconfig:\u002Fdata\u002Fconfigdb\n        entrypoint: [ \"\u002Fusr\u002Fbin\u002Fmongod\", \"--auth\", \"--keyFile\", \"\u002Fetc\u002Fmongod-keyfile\", \"--bind_ip_all\", \"--replSet\", \"rs0\" ]\n        depends_on:\n          - mongo2\n          - mongo3\n        \n    mongo2:\n        hostname: mongo2\n        container_name: gogqlserver_mongo2\n        image: mongo:4.2.2-bionic\n        restart: unless-stopped\n        expose:\n            - 27017\n        ports:\n            - 27018:27017\n        volumes:\n            - .\u002Fdocker\u002Fmongo\u002Fetc\u002Fmongod-keyfile:\u002Fetc\u002Fmongod-keyfile:ro # Permission: 400\n        entrypoint: [ \"\u002Fusr\u002Fbin\u002Fmongod\", \"--auth\", \"--keyFile\", \"\u002Fetc\u002Fmongod-keyfile\", \"--bind_ip_all\", \"--replSet\", \"rs0\" ]\n        depends_on:\n          - mongo3\n\n    mongo3:\n        hostname: mongo3\n        container_name: gogqlserver_mongo3\n        image: mongo:4.2.2-bionic\n        restart: unless-stopped\n        expose:\n            - 27017\n        ports:\n            - 27019:27017\n        volumes:\n            - .\u002Fdocker\u002Fmongo\u002Fetc\u002Fmongod-keyfile:\u002Fetc\u002Fmongod-keyfile:ro # Permission: 400\n        entrypoint: [ \"\u002Fusr\u002Fbin\u002Fmongod\", \"--auth\", \"--keyFile\", \"\u002Fetc\u002Fmongod-keyfile\", \"--bind_ip_all\", \"--replSet\", \"rs0\" ]\n\n    mongo-express:\n        container_name: gogqlserver_mongo_express\n        image: mongo-express:0.49.0\n        restart: unless-stopped\n        ports:\n            - 8081:8081\n        environment:\n            ME_CONFIG_MONGODB_SERVER: 'mongo1,mongo2,mongo3'\n            ME_CONFIG_MONGODB_ADMINUSERNAME: root\n            ME_CONFIG_MONGODB_ADMINPASSWORD: password\n        depends_on:\n          - mongo1\n          - mongo2\n          - mongo3\n"}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"contains three mongo containers with the primary as "},{type:b,tag:g,props:{},children:[{type:a,value:W}]},{type:a,value:". I have also included "},{type:b,tag:g,props:{},children:[{type:a,value:Y}]},{type:a,value:" an admin interface to use as a playground for "},{type:b,tag:g,props:{},children:[{type:a,value:"mongo"}]},{type:a,value:". However, before accessing "},{type:b,tag:g,props:{},children:[{type:a,value:"http:\u002F\u002Flocalhost:8081"}]},{type:a,value:" - the "},{type:b,tag:g,props:{},children:[{type:a,value:Y}]},{type:a,value:" admin site we need to run a command "},{type:b,tag:g,props:{},children:[{type:a,value:"rs.initiate()"}]},{type:a,value:".  We will need three scripts and one keyfile with the following structure."}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,Z]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"docker\u002Fmongo\n├── etc\n│   └── mongod-keyfile\n└── root\n    ├── 000_init_replicaSet.js\n    ├── 001_init_database.js\n    └── 002_init_user.js\n"}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"000_init_replicaSet.js"}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,L]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"rs"},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:"initiate"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:"\n        _id"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"rs0\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n        members"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"0"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"mongo1:27017\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"1"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"mongo2:27017\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:M},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"2"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:N},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"\"mongo3:27017\""}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:" arbiterOnly"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,"boolean"]},children:[{type:a,value:"true"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"001_init_database.js"}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,L]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:ac}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ae}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:"createCollection"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"002_init_user.js"}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,L]},children:[{type:b,tag:g,props:{},children:[{type:b,tag:c,props:{className:[d,ab]},children:[{type:a,value:ac}]},{type:a,value:ad},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:ae}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:af}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:"createUser"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:"\n        user"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:C}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n        pwd"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'password'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:"\n        roles"},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:_}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'root'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'admin'"}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:t}]},{type:a,value:ag},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:"'dbOwner'"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:l}]},{type:a,value:J},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:j}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,k]},children:[{type:a,value:C}]},{type:a,value:u},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:$},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:aa}]},{type:a,value:I},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:v}]},{type:a,value:f},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:O},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:n}]},{type:b,tag:c,props:{className:[d,w,s,x]},children:[{type:a,value:"getUsers"}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:y}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:z}]},{type:b,tag:c,props:{className:[d,e]},children:[{type:a,value:A}]},{type:a,value:f}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"and finally "}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,Z]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"openssl rand -base64 "},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"756"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,h]},children:[{type:a,value:"\u003E"}]},{type:a,value:ah},{type:b,tag:c,props:{className:[d,s]},children:[{type:a,value:"chmod"}]},{type:a,value:i},{type:b,tag:c,props:{className:[d,B]},children:[{type:a,value:"400"}]},{type:a,value:ah}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"You can also use the following script as well but you still need to manually edit the "},{type:b,tag:g,props:{},children:[{type:a,value:T}]},{type:a,value:" and run the script twice.  I suppose i could add several "},{type:b,tag:g,props:{},children:[{type:a,value:"sed"}]},{type:a,value:" commands to do the work."}]},{type:a,value:f},{type:b,tag:o,props:{className:[p]},children:[{type:b,tag:q,props:{className:[r,X]},children:[{type:b,tag:g,props:{},children:[{type:a,value:"#!\u002Fbin\u002Fsh\ndocker-compose stop\ndocker-compose up --build --remove-orphans -d\nsleep 2\ndocker-compose exec mongo1 mongo admin -u root -p password \u002Froot\u002F000_init_replicaSet.js\ndocker-compose exec mongo1 mongo admin -u root -p password \u002Froot\u002F001_init_database.js\ndocker-compose exec mongo1 mongo admin -u root -p password \u002Froot\u002F002_init_user.js\n"}]}]}]},{type:a,value:f},{type:b,tag:m,props:{},children:[{type:a,value:"In the end you should have a functional authenticated replica set with Mongo. Do not forget that you need to use "},{type:b,tag:g,props:{},children:[{type:a,value:"rs.slaveOk()"}]},{type:a,value:" on secondary and as well use your user account to access Mongo. The user created by the environment variables only exists in the admin database."}]}]},dir:"\u002Farticles",path:"\u002Farticles\u002Fmongo-docker",extension:".md",slug:"mongo-docker",createdAt:"2020-07-22T00:27:09.685Z",updatedAt:"2020-07-22T00:30:14.077Z"},prev:{title:"Golang GraphQL Server",updateAt:K,slug:"golang-graphql"},next:{title:"New publication",updateAt:K,slug:"nrc-publication"}}],fetch:[],mutations:[]}}("text","element","span","token","punctuation","\n","code","operator"," ",":","string",",","p",".","div","nuxt-content-highlight","pre","line-numbers","function","{","\n            ","}","method","property-access","(",")",";","number","'test'","a","nofollow","noopener","noreferrer","_blank","\n    "," db","2020-07-19T03:00:00.000Z","language-javascript","_id"," host","\n\ntestdb","Dockerizing a Mongodb Replica Set","root","https:\u002F\u002Fdocs.docker.com\u002Fcompose\u002F","here","docker-compose.yml","hr","entrypoint","mongo1","language-text","mongo-express","language-bash","[","\n        ","]","keyword","var"," testdb ","=","getSiblingDB","\n                role"," docker\u002Fmongo\u002Fetc\u002Fmongod-keyfile\n")));